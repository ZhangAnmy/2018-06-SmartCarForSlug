package factory.serviceimpl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import factory.dao.UserDao;
import factory.entity.User;
import factory.service.UserService;



@Service
public class UserServiceImpl implements UserService{
	@Autowired
	private UserDao userDao;
	/**
	 * 通过用户名查询用户
	 */
	@Override
	public User queryUserByUsername(String username){
		return userDao.queryUserByUsername(username);
	}
	
	/**
	 * 注册用户
	 */
	@Override
	public void registerUser(User user){
		userDao.registerUser(user);
		
	}
	
	/**
	 * 查询所有司机
	 */
	@Override
	public List<User> quertAllDriver() {
		
		return userDao.queryAllDriver();
	}

	/**
	 * 通过真实姓名查询用户
	 */
	@Override
	public User queryUserByRealName(String realname) {
		// TODO Auto-generated method stub
		return userDao.queryUserByRealName(realname);
	}
	
	/*public void removdeUser(String name){
	
	}*/
	
	@Override
	public void deleteUser(Map<String, Integer> deleteUserInfo) {
		int sensorId = deleteUserInfo.get("userId");
		System.out.println(sensorId);
		userDao.delectUser(sensorId);
	}

	@Override
	public List<User> queryDriverServeOneFactory(int siteId) {
		List<User> drivers=new ArrayList<User>();
		drivers.addAll(userDao.queryDriverServeOneFactory(siteId));
		return drivers;
	}

	//判断用户是否存在  
    public boolean isUserExist(String username) {  
        if (userDao.queryUserByUsername(username) == null) {  
            return false;  
        } else {  
            return true;  
        }  
    }  
  
    //根据提供的用户名拿密码  
    public String getPasswordByUsername(String username) {  
        return userDao.queryUserByUsername(username).getPassword();  
    }  
	
	@Override
	public Map<String, String> modifyPasswordByUsername(Map<String, Object> userMap) {  
		Map<String, String> result=new HashMap<String, String>();
		int userId=(int) userMap.get("userId");
		String originPwd=String.valueOf(userMap.get("originPwd"));
		String newPwd=String.valueOf(userMap.get("newPwd"));
        User user = userDao.queryUserByUserId(userId);
        System.out.print("原始用户密码"+user.getPassword());
        if(user.getPassword().equals(originPwd)){
        	user.setPassword(newPwd);
        	userDao.modifyPasswordByUsername(user);
        	result.put("msg", "success");
        }
        else {
        	result.put("msg", "error");
		}
        
        System.out.print(result);
        return result;       
    }  
	
	@Override
	public List<User> queryAllManager() {
		// TODO Auto-generated method stub
		return userDao.queryAllManager();
	}

	@Override
	public void updateUserInfo(User user) {
		 userDao.updateUserInfo(user);		
		
	}

	@Override
	public User queryUserByUserId(int userId) {
		// TODO Auto-generated method stub
		return userDao.queryUserByUserId(userId);
	}


	


}
